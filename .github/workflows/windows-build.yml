name: Build (Windows)

on:
  workflow_dispatch: {}
  push:
    tags: ['v*']

jobs:
  win-build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (from requirements.txt only)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
          } else {
            echo "requirements.txt not found. Installing minimal deps..."
            pip install PyQt6 SQLAlchemy reportlab
          }
          pip install pyinstaller pyinstaller-hooks-contrib

      - name: Clean previous build artifacts/spec
        shell: pwsh
        run: |
          if (Test-Path "BeirutPOS.spec") { Remove-Item "BeirutPOS.spec" -Force }
          Remove-Item -Recurse -Force dist, build -ErrorAction SilentlyContinue

      - name: Ensure assets folder (track even if empty)
        shell: pwsh
        run: |
          if (-not (Test-Path "assets")) { New-Item -ItemType Directory "assets" | Out-Null }

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          $args = @(
            "launcher.py",
            "--name","BeirutPOS",
            "--onefile",
            "--noconsole",
            "--clean",

            # Bring *all* Qt libs/plugins to avoid DLL mismatch issues
            "--collect-all","PyQt6",
            "--collect-all","PyQt6.Qt6",

            # Dynamic imports safety
            "--collect-submodules","beirut_pos",
            "--collect-submodules","sqlalchemy",

            # (optional) sqlite3 extras if your app uses sqlite
            "--collect-all","sqlite3"
          )

          if (Test-Path "assets/app.ico") { $args += @("--icon","assets/app.ico") }
          if (Test-Path "assets")         { $args += @("--add-data","assets;assets") }

          python -m PyInstaller @args

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BeirutPOS-win
          path: dist/BeirutPOS.exe

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/BeirutPOS.exe
