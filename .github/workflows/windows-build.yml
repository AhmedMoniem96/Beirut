name: Build (Windows)

on:
  workflow_dispatch: {}
  push:
    tags: ['v*']

jobs:
  win-build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (3.12)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (pin PyQt6/Qt6 6.5.2)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip uninstall -y PyQt6 PyQt6-Qt6 PyQt6-sip 2>$null | Out-Null

          pip install --no-cache-dir --only-binary=:all: `
            PyQt6==6.5.2 PyQt6-Qt6==6.5.2 "PyQt6-sip>=13.5,<14"

          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir pyinstaller pyinstaller-hooks-contrib

      - name: Show PyQt/Qt versions (sanity check)
        shell: pwsh
        run: |
          python -c "from importlib.metadata import version; from PyQt6.QtCore import QT_VERSION_STR; print(f'PyQt6={version(\"PyQt6\")}, Qt6={QT_VERSION_STR}')"

      - name: Clean previous build artifacts/spec
        shell: pwsh
        run: |
          if (Test-Path 'BeirutPOS.spec') { Remove-Item 'BeirutPOS.spec' -Force }
          Remove-Item -Recurse -Force dist, build -ErrorAction SilentlyContinue

      - name: Ensure assets folder (track even if empty)
        shell: pwsh
        run: |
          if (-not (Test-Path 'assets')) { New-Item -ItemType Directory 'assets' | Out-Null }

      - name: Build EXE with PyInstaller (bundle all Qt bits)
        shell: pwsh
        run: |
          $args = @(
            'launcher.py',
            '--name','BeirutPOS',
            '--onefile',
            '--noconsole',
            '--clean',
            '--collect-all','PyQt6',
            '--collect-all','PyQt6.Qt6',
            '--collect-submodules','beirut_pos',
            '--collect-submodules','sqlalchemy',
            '--collect-all','sqlite3'
          )
          if (Test-Path 'assets/app.ico') { $args += @('--icon','assets/app.ico') }
          if (Test-Path 'assets')         { $args += @('--add-data','assets;assets') }
          python -m PyInstaller @args

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BeirutPOS-win
          path: dist/BeirutPOS.exe

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/BeirutPOS.exe
